{"version":3,"sources":["ServerInterface/data.js","ServerInterface/server.js","components/Home.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["places","name","address","reviews","stars","server","fetchPlaces","Home","props","state","username","data","this","setState","location","user","id","length","to","map","p","pathname","place","React","Component","Login","onSubmit","event","trim","authenticated","preventDefault","handleChange","value","target","password","from","type","onChange","App","basename","process","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2eeed9a7.chunk.js","sourcesContent":["const place1 = {\n    name: 'The Taco Shop Co.',\n    address: '1350 E Broadway Blvd, Tucson, AZ 85719',\n    reviews: ['Delicious!', 'Amazing burritos.', 'Tasty and affordable!', 'Good indoor and drive through service.'],\n    stars: '*****'\n}\nconst place2 = {\n    name: 'Barrio Brewing',\n    address: '800 E 16th St, Tucson, AZ 85719',\n    reviews: ['Fabulous!', 'Amazing wings.', 'Awesome atmosphere!', 'Great dine in and take out services.'],\n    stars: '*****'\n}\nconst place3 = {\n    name: 'Tall Boys/La Cocina',\n    address: '201 N Court Ave, Tucson, AZ 85701',\n    reviews: ['Best brunch!', 'Love the savory corn cakes.', 'Great veg options!', 'Outdoor dining at its funnest.'],\n    stars: '*****'\n}\nconst place4 = {\n    name: 'Tumerico',\n    address: '2526 E 6th St, Tucson, AZ 85716',\n    reviews: ['Best vegan Mexican food!', 'Love the tamales.', 'Gourmet veg options!', 'Delicious lattes & Turkish coffee.'],\n    stars: '*****'\n}\n\nlet places = [place1, place2, place3, place4];\n\nexport default places;","import places from './data';\nlet server = {\n    fetchPlaces: () => {return places}\n};\nexport default server;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\nimport server from '../ServerInterface/server';\n\nclass Home extends React.Component {\n    constructor(props) { \n        super(props); \n        this.state = {\n            username: '',\n            places: []\n        };\n    }\n    componentDidMount(){\n        let data = server.fetchPlaces();\n        this.setState({places: data});\n    }\n    render() {\n        let username = '';\n        const location = this.props.location;\n        if (location) {\n            if (location.state) {\n                if (location.state.user) {\n                    username = location.state.user;\n                }\n            }\n        };\n        return(            \n            <div id=\"mainBody\">\n                <div id=\"header\"><h1>Welcome to Nearby Places!</h1></div>\n                <div id=\"loginLink\">\n                    {username.length > 0 ? username \n                    : <Link to='/login' id='logintext'>Login</Link>}\n                </div>\n                <div id=\"findPlaces\">\n                    {this.state.places.map(p => \n                    <Link to = {{pathname: '/place', state:{place:p} }}>\n                    <p>\n                    {p.name}\n                    {p.stars}\n                    {p.reviews}\n                    {p.address}\n                    </p>\n                    </Link>)}\n                </div>\n            </div>)\n    }\n};\nexport default Home;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\n\nclass Login extends React.Component {\n    constructor(props) { //'props' is always passed to constructor\n        super(props); //have to have 'super' or else error\n        this.state = {\n            username: '',\n            authenticated: false,\n            password: ''\n        };\n    };\n\n    onSubmit = (event) => {\n        //check if user has provided input for user\n        if(this.state.username.trim().length > 0) {\n            this.setState({authenticated:true});\n        };\n        event.preventDefault(); //tells the browser not to do default \n    };\n\n    handleChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    };\n\n    render() {\n        let from = {pathname: \"/\", state: {user: this.state.username}};\n        if (this.state.authenticated) {\n            return(\n                <Redirect to={from} />\n            );\n        }\n        return(\n            <div id=\"mainBody\">\n                <div id=\"header\"><Link to=\"/\" id=\"hometext\"><h2>Nearby Places</h2></Link>\n                    <h3>Login</h3></div>\n                <form onSubmit={this.onSubmit} id=\"form\">\n                    <label>Username: </label>\n                    <input \n                    type=\"text\" \n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleChange}\n                    ></input>\n                    <label>  Password: </label>\n                    <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    ></input>\n                    <button type=\"submit\"> Login </button>\n                </form>\n                <div id=\"home\"></div>\n            </div>\n        )\n    }\n}\nexport default Login;","import React from 'react';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport { \n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n            <Route exact path = '/' render = {props => <Home {...props} />}>         \n            </Route>\n            <Route path = '/login'>\n                <Login />\n            </Route>\n        </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}